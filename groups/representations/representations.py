from list_problem import FromListProblem


class RepresentationSn(FromListProblem):
    problems = [
        'вращениями куба на множестве его вершин',  # 8
        'вращениями октаэдра на множестве его граней',  # 8
        'сопряжением на множестве всех $3$-циклов',  # 8
        'домножением слева на множестве левых смежных классов по подгруппе $\\langle (123) \\rangle$',  # 8
        'вращениями куба на множестве его ребер',  # 12
        'вращениями октаэдра на множестве его ребер',  # 12
        'домножением слева на множестве левых смежных классов по подгруппе $\\langle (12) \\rangle$',  # 12
        'домножением слева на множестве левых смежных классов по подгруппе $\\langle (12)(34) \\rangle$',  # 12
        'сопряжениями на элементах подгруппы $A_4$',  # 12
        'сопряжениями на множестве упорядоченных пар элементов цикленного типа $2+2$',  # 9
        'домножением слева на множетве левых смежных классов по подгруппе $\\langle (12)(34), (13)(24) \\rangle$',  # 6
        'симметриями третраэдра на множестве его ребер',  # 6
        'домножением слева на множетве левых смежных классов по подгруппе $\\langle (12),(34) \\rangle$',  # 6
    ]

    def render(self):
        return 'Группа $S_4$ действует {}.\n\\begin{{enumerate}}' \
               '\\item Найти характер соответствующего перестановочного представления. ' \
               'Разложить представление в сумму неприводимых.\n' \
               '\\item Описать явно подпространство какого-нибудь неприводимого слагаемого ' \
               'размерности $>1$ (указать, какого именно).\n' \
               '\\item Найти кратности неприводимых представлений во внешнем и симметрическом квадратах ' \
               'рассматриваемого представления.\\end{{enumerate}}'.format(
            self.text
        )


class SmallGroupCharacterTable(FromListProblem):
    problems = [
        ('a & b \\\\ 0 & 1', 11, '^5=1'),
        ('a & b \\\\ 0 & 1', 13, '^4=1'),
        ('a & b \\\\ 0 & 1', 13, '^3=1'),
        ('a & b \\\\ 0 & a^{-1}', 11, '^5=1'),
        ('a & b \\\\ 0 & a^{-1}', 13, '^3=1'),
        ('a & b \\\\ 0 & 1', 9, '^4=1'),
        ('a & b \\\\ 0 & a^{-1}', 11, '^5=1'),
        ('a^2 & b \\\\ 0 & a', 7, '\\neq0'),
        ('a^2 & b \\\\ 0 & a^3', 7, '\\neq0'),
        # ('a^2 & b \\ 0 & a^{-3}', 7, '\\neq0'),
        ('a & b \\\\ 0 & 1', 8, '\\neq0'),
        ('a & b \\\\ 0 & 1', 5, '\\neq0'),
        ('a & b \\\\ 0 & a^{-1}', 5, '\\neq0'),
        ('a & b \\\\ 0 & 1', 7, '\\neq0'),
    ]
    problems = ['\\left\\{{ \\begin{{pmatrix}} {} \\end{{pmatrix}} \\ \\middle|\\ ' \
                'a,b\\in\\mathbb{{F}}_{{{}}},\\ a{} \\right\\}}'.format(*problem_data) for problem_data in problems]

    def render(self):
        return 'Вычислить таблицу характеров группы\n\\[ G = {}. \\]'.format(self.text)